name: Build PVengine
run-name: Build PVengine executables
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build_linux:
    name: Build & test on Linux (Ubuntu)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: src/engine
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Install requirements
        run: pip3 install -r requirements.txt
      - run: pip3 install pyinstaller
      - run: pip3 install cx_Freeze

      - name: Build with pyinstaller
        run: sh build.sh
      - name: Test executable
        run: ./build/pvengine bench

      - name: Rename executable
        run: mv build/pvengine build/pvengine-linux

      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: pvengine-linux
          path: src/engine/build/pvengine-linux

      - name: Build with cx_Freeze
        run: sh build_fast.sh
      - name: Test executable
        run: ./build/pvengine bench

  build_macos:
    name: Build & test on MacOS
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
        working-directory: src/engine
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Install requirements
        run: pip3 install -r requirements.txt
      - run: pip3 install pyinstaller
      - run: pip3 install cx_Freeze

      - name: Build with pyinstaller
        run: sh build.sh
      - name: Test executable
        run: ./build/pvengine bench

      - name: Rename executable
        run: mv build/pvengine build/pvengine-macos

      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: pvengine-macos
          path: src/engine/build/pvengine-macos

      - name: Build with cx_Freeze
        run: sh build_fast.sh
      - name: Test executable
        run: ./build/pvengine bench

  build_windows:
    name: Build & test on Windows
    runs-on: windows-latest
    defaults:
      run:
        working-directory: src/engine
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Install requirements
        run: pip install -r requirements.txt
      - run: pip install pyinstaller
      - run: pip install cx_Freeze

      - name: Build with pyinstaller
        run: python -m PyInstaller --onefile -n pvengine --distpath build main.py
      - name: Test executable
        run: echo 'bench' | ./build/pvengine.exe

      - name: Rename executable
        run: mv build/pvengine.exe build/pvengine-windows.exe

      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: pvengine-windows
          path: src/engine/build/pvengine-windows.exe

      - name: Build with cx_Freeze
        run: python -m cx_Freeze -c main.py --target-dir=build --target-name=pvengine
      - name: Test executable
        run: echo 'bench' | ./build/pvengine.exe

  publish_prelease:
    name: Publish prelease
    runs-on: ubuntu-latest
    needs: [build_linux, build_macos, build_windows]
    defaults:
      run:
        shell: bash
        working-directory: src/engine
    if: github.ref_name == 'main'
    continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: pvengine-linux
      - name: Download MacOS artifact
        uses: actions/download-artifact@v3
        with:
          name: pvengine-macos
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: pvengine-windows

      - name: Get commit date
        run: echo "COMMIT_SHA=$(git rev-parse HEAD | cut -c 1-8)" >> $GITHUB_ENV
      - name: Get commit SHA
        run: echo "COMMIT_DATE=$(git show -s --date=format:'%Y%m%d' --format=%cd HEAD)" >> $GITHUB_ENV

      - name: Upload binaries
        uses: softprops/action-gh-release@v1
        with:
          name: PVengine dev-${{ env.COMMIT_DATE }}-${{ env.COMMIT_SHA }}
          tag_name: pvengine-dev-${{ env.COMMIT_DATE }}-${{ env.COMMIT_SHA }}
          prerelease: true
          files: |
            pvengine-linux
            pvengine-macos
            pvengine-windows.exe

